# SIEM Integration Configuration
# This file configures the SIEM integrations for the EDR system

# Global SIEM settings
enabled: true  # Master switch for all SIEM integrations

# Default event fields to include in all SIEM events
default_fields:
  product: "edr_system"
  vendor: "security_operations_center"
  version: "1.0.0"

# SIEM Integrations
integrations:
  # Splunk HTTP Event Collector (HEC) integration
  splunk:
    enabled: true
    type: "splunk"
    url: "http://localhost:8088/services/collector/event"  # Local Splunk HEC for testing
    token: "00000000-0000-0000-0000-000000000000"  # Default test token
    index: "edr_events"
    source_type: "edr:security"
    host: "edr-test-system"
    verify_ssl: false  # Disable SSL for testing
    timeout: 5  # seconds
    
    # Field mappings - map EDR fields to SIEM fields
    field_mappings:
      "event_type": "event_type"
      "timestamp": "_time"
      "severity": "severity"
      "source": "source"
      "details": "details"
      "agent_id": "host"
    
    # Filter events to send to this SIEM (optional)
    filters:
      # Only send events with these severities
      severity:
        - "critical"
        - "high"
        - "medium"
      
      # Or define more complex filters using a list of conditions (AND logic)
      # - field: "event_type"
      #   operator: "in"
      #   value: ["malware_detected", "process_injection"]
      # - field: "severity"
      #   operator: ">="
      #   value: "medium"

  # Elasticsearch/OpenSearch integration
  elastic:
    enabled: false
    type: "elastic"
    url: "https://elastic.example.com:9200"
    api_key: "${ELASTIC_API_KEY}"  # Use environment variable for security
    # Alternative: username/password authentication
    # username: "elastic"
    # password: "${ELASTIC_PASSWORD}"
    index: "edr-events"
    verify_ssl: true
    timeout: 10
    
    # Bulk settings for batch processing
    bulk:
      enabled: true
      chunk_size: 1000  # Number of events per bulk request
      max_retries: 3
      
    # Field mappings
    field_mappings:
      "event_type": "event.action"
      "timestamp": "@timestamp"
      "severity": "event.severity"
      "source": "agent.name"
      "details": "event.original"
    
    # Index template settings (optional)
    index_template:
      create: true
      template_name: "edr-events-template"
      template_pattern: "edr-*"
      settings:
        number_of_shards: 1
        number_of_replicas: 1
      mappings:
        dynamic: true
        date_detection: false
        properties:
          "@timestamp":
            type: "date"
          event.created:
            type: "date"
          event.severity:
            type: "keyword"
          event.action:
            type: "keyword"
          agent.id:
            type: "keyword"
          host.name:
            type: "keyword"

  # Microsoft Sentinel (Azure) integration
  sentinel:
    enabled: false
    type: "azure_sentinel"
    workspace_id: "${SENTINEL_WORKSPACE_ID}"
    shared_key: "${SENTINEL_SHARED_KEY}"
    log_type: "EDREvents_CL"  # Custom log type name
    api_version: "2016-04-01"
    timeout: 30
    
    # Field mappings for Azure Sentinel
    field_mappings:
      "event_type": "EventType"
      "timestamp": "TimeGenerated"
      "severity": "Severity"
      "source": "SourceSystem"
      "details": "Details"

# Default SIEM to use when not specified
default_siem: "splunk"

# Batch processing settings
batch_processing:
  enabled: true
  max_batch_size: 1000
  flush_interval: 60  # seconds
  retry_attempts: 3
  retry_delay: 5  # seconds

# Logging
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_file: "logs/siem_integration.log"
  max_size_mb: 10
  backup_count: 5

# Performance settings
performance:
  max_threads: 5
  queue_size: 10000
  
# Health check settings
health_check:
  enabled: true
  interval: 300  # seconds
  timeout: 10  # seconds

# Alerting for SIEM integration issues
alerting:
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    smtp_user: "${SMTP_USER}"
    smtp_password: "${SMTP_PASSWORD}"
    from_address: "edr-alerts@example.com"
    to_addresses:
      - "security-team@example.com"
  
  # Webhook for alerting (e.g., Slack, Microsoft Teams)
  webhook:
    enabled: false
    url: "${ALERT_WEBHOOK_URL}"
    timeout: 10

# Custom event processors (optional)
event_processors:
  - name: "enrich_with_geoip"
    enabled: true
    config:
      database_path: "/path/to/GeoLite2-City.mmdb"
      
  - name: "filter_sensitive_data"
    enabled: true
    config:
      patterns:
        - "(?i)(password|pwd|passwd|secret|token|api[_-]?key)=\\S+"
        - "(?:\\b|_)(?:\\d[ -]*?){13,16}(?:\\b|_)"  # Credit card numbers
      replacement: "[REDACTED]"

# Custom fields to add to all events
global_fields:
  environment: "${ENVIRONMENT:-production}"
  region: "${AWS_REGION:-us-east-1}"  # Example using AWS region
  
# Rate limiting (per SIEM)
rate_limiting:
  enabled: true
  max_events_per_second: 100
  burst_limit: 1000

# TLS/SSL configuration (for self-signed certificates)
tls:
  enabled: false
  ca_cert: "/path/to/ca.pem"
  client_cert: "/path/to/client.pem"
  client_key: "/path/to/client.key"
  verify: true

# Proxy configuration (if needed)
proxy:
  enabled: false
  http: "http://proxy.example.com:8080"
  https: "http://proxy.example.com:8080"
  no_proxy: "localhost,127.0.0.1,.example.com"

# Monitoring and metrics
metrics:
  enabled: true
  port: 9090
  path: "/metrics"
  
# High availability settings (for clustered deployments)
high_availability:
  enabled: false
  cluster_nodes:
    - "edr-node1.example.com"
    - "edr-node2.example.com"
  election_timeout: 30  # seconds
  
# Archiving settings for failed events
archive:
  enabled: true
  directory: "/var/log/edr/archive"
  max_size_mb: 1024
  max_age_days: 30
  compression: "gzip"  # none, gzip, lzma

# Example of environment-specific overrides
# These can be used to override settings based on environment variables
# For example: ENVIRONMENT=production python edr_server.py
environment_overrides:
  production:
    logging:
      level: "WARNING"
    batch_processing:
      max_batch_size: 5000
      
  development:
    logging:
      level: "DEBUG"
    batch_processing:
      max_batch_size: 100

# Example of custom SIEM type
custom_siem:
  enabled: false
  type: "custom"
  module: "custom_siem_module"
  class_name: "CustomSIEMIntegration"
  config:
    api_url: "https://custom-siem.example.com/api/v1/events"
    api_key: "${CUSTOM_SIEM_API_KEY}"
