# EDR Threat Hunting Configuration\n\n# Enable or disable the threat hunting module\nenabled: true\n\n# General settings\ngeneral:\n  # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)\n  log_level: INFO\n  \n  # Directory to store threat hunting data and artifacts\n  data_dir: "/var/lib/edr/threat_hunting"\n  \n  # Directory containing hunting rules (YAML/JSON files)\n  rules_dir: "edr/threat_hunting/rules"\n  \n  # Maximum number of concurrent hunting jobs\n  max_concurrent_jobs: 5\n  \n  # Enable/disable automatic rule reloading when files change\n  auto_reload_rules: true\n  \n  # Default time range for historical searches (in seconds)\n  default_time_range: 86400  # 24 hours\n\n# IOC (Indicators of Compromise) settings\nioc:\n  # Enable/disable IOC-based hunting\n  enabled: true\n  \n  # Update interval for IOCs (in seconds)\n  update_interval: 3600  # 1 hour\n  \n  # Maximum number of IOCs to load (0 for unlimited)\n  max_iocs: 100000\n  \n  # IOC sources (local files, threat feeds, etc.)\n  sources:\n    - name: local\n      type: file\n      path: "iocs/local_iocs.json"\n      format: json\n      enabled: true\n      \n    - name: mitre_attack\n      type: http\n      url: "https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json"\n      format: stix\n      enabled: true\n      update_interval: 86400  # 24 hours\n      \n    - name: alienvault_otx\n      type: otx\n      api_key: "${OTX_API_KEY}"  # Use environment variable\n      enabled: false  # Enable if you have an OTX API key\n      pulse_ids: []  # Specific pulse IDs to monitor\n      \n    - name: misp\n      type: misp\n      url: "https://misp.example.com"\n      api_key: "${MISP_API_KEY}"  # Use environment variable\n      enabled: false  # Enable if you have a MISP instance\n      tags: ["edr"]  # Only fetch events with these tags\n  \n  # IOC whitelist (never alert on these IOCs)\n  whitelist:\n    ipv4:\n      - "10.0.0.0/8"\n      - "192.168.0.0/16"\n      - "172.16.0.0/12"\n    domains:\n      - "*.example.com"\n      - "*.microsoft.com"\n      - "*.google.com"\n    hashes: []\n\n# Behavioral analysis settings\nbehavioral:\n  # Enable/disable behavioral analysis\n  enabled: true\n  \n  # Data sources to analyze\n  data_sources:\n    - name: process_creation\n      enabled: true\n      \n    - name: network_connections\n      enabled: true\n      \n    - name: file_events\n      enabled: true\n      \n    - name: registry_events\n      enabled: true\n      \n    - name: dns_queries\n      enabled: true\n  \n  # Anomaly detection settings\n  anomaly_detection:\n    # Enable/disable anomaly detection\n    enabled: true\n    \n    # Sensitivity (1-100, higher = more sensitive)\n    sensitivity: 75\n    \n    # Training period (in days)\n    training_period: 30\n    \n    # Update interval for models (in seconds)\n    model_update_interval: 86400  # 24 hours\n  \n  # Machine learning settings\n  machine_learning:\n    # Enable/disable machine learning\n    enabled: true\n    \n    # Model directory\n    model_dir: "${data_dir}/models"\n    \n    # Training interval (in seconds)\n    training_interval: 86400  # 24 hours\n    \n    # Features to use for ML models\n    features:\n      - process_name\n      - command_line\n      - parent_process\n      - user\n      - destination_ip\n      - destination_port\n      - protocol\n      - file_path\n      - file_hash\n      - registry_key\n      - registry_value\n\n# Memory analysis settings\nmemory_analysis:\n  # Enable/disable memory analysis\n  enabled: true\n  \n  # Maximum memory dump size (in MB)\n  max_dump_size: 1024\n  \n  # Processes to analyze (empty = all)\n  target_processes: []\n  \n  # Scan interval (in seconds)\n  scan_interval: 3600  # 1 hour\n  \n  # YARA rules for memory scanning\n  yara_rules:\n    - name: malware_signatures\n      path: "yara/malware_signatures.yar"\n      enabled: true\n    - name: suspicious_strings\n      path: "yara/suspicious_strings.yar"\n      enabled: true\n\n# Integration settings\nintegrations:\n  # SIEM integration\n  siem:\n    enabled: true\n    type: "splunk"  # splunk, elasticsearch, arcsight, etc.\n    endpoint: "https://splunk.example.com:8088/services/collector/event"\n    token: "${SPLUNK_TOKEN}"  # Use environment variable\n    index: "edr_threat_hunting"\n    \n  # Threat intelligence platforms\n  threat_intel:\n    - name: "VirusTotal"\n      enabled: true\n      api_key: "${VT_API_KEY}"  # Use environment variable\n      \n    - name: "AlienVault OTX"\n      enabled: true\n      api_key: "${OTX_API_KEY}"  # Use environment variable\n      \n    - name: "MISP"\n      enabled: false\n      url: "https://misp.example.com"\n      api_key: "${MISP_API_KEY}"  # Use environment variable\n  \n  # Ticketing system\n  ticketing:\n    enabled: false\n    type: "servicenow"  # servicenow, jira, etc.\n    endpoint: "https://instance.service-now.com/api/now/table/incident"\n    username: "${SERVICENOW_USER}"\n    password: "${SERVICENOW_PASSWORD}"\n\n# Advanced settings\nadvanced:\n  # Enable debug mode (more verbose logging)\n  debug: false\n  \n  # Enable/disable dry run mode (no actions taken)\n  dry_run: false\n  \n  # Enable/disable simulation mode (simulates alerts without taking action)\n  simulation_mode: false\n  \n  # Maximum number of results to return per query\n  max_results: 1000\n  \n  # Query timeout (in seconds)\n  query_timeout: 300  # 5 minutes\n  \n  # Cache settings\n  cache:\n    enabled: true\n    ttl: 3600  # 1 hour\n    max_size: 10000  # Maximum number of items in cache\n  \n  # Performance tuning\n  performance:\n    # Number of worker threads for parallel processing\n    worker_threads: 4\n    \n    # Batch size for bulk operations\n    batch_size: 100\n    \n    # Memory limit (in MB, 0 = unlimited)\n    memory_limit: 4096  # 4GB\n\n# Rule overrides\nrule_overrides:\n  # Disable specific rules by ID\n  disabled_rules:\n    - "rule_id_1"\n    - "rule_id_2"\n  \n  # Override rule severities\n  severity_overrides:\n    "rule_id_3": "high"\n    "rule_id_4": "low"\n  \n  # Rule-specific settings\n  rule_settings:\n    "rule_id_5":\n      enabled: true\n      params:\n        threshold: 10\n        interval: 300  # 5 minutes
