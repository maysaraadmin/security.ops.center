# Correlation Rules Configuration
# This file defines the correlation rules for the SIEM system

# Default settings for all rules
defaults:
  # Default time window in seconds (5 minutes)
  time_window: ${DEFAULT_TIME_WINDOW:-300}
  
  # Default severity for rules that don't specify one
  severity: ${DEFAULT_SEVERITY:-medium}
  
  # Default tags to apply to all rules
  tags: ${DEFAULT_TAGS:-[default]}
  
  # Rate limiting configuration
  rate_limit:
    enabled: ${RATE_LIMIT_ENABLED:-true}
    max_alerts: ${RATE_LIMIT_MAX_ALERTS:-10}
    time_window: ${RATE_LIMIT_WINDOW:-3600}  # 1 hour

# List of correlation rules
rules:
  # Multiple Failed Logins
  - id: "auth_bruteforce"
    name: "Multiple Failed Login Attempts"
    description: "Detect multiple failed login attempts from the same source IP"
    condition: >
      (message =~ /(?:failed\s+password|authentication\s+failed|invalid\s+credentials|login\s+failed)/i) 
      and source_ip != '' 
      and user != ''
    group_by: ["source_ip", "user"]
    time_window: ${AUTH_TIME_WINDOW:-300}  # 5 minutes
    threshold: ${AUTH_THRESHOLD:-5}
    severity: "high"
    actions:
      - type: "alert"
        message: "Multiple failed login attempts from {{ source_ip }} for user {{ user }}"
      - type: "block_ip"
        ip: "{{ source_ip }}"
        duration: ${AUTH_BLOCK_DURATION:-3600}  # 1 hour
    tags: ["authentication", "bruteforce", "security"]
    rate_limit:
      enabled: true
      max_alerts: ${AUTH_MAX_ALERTS:-5}
      time_window: ${AUTH_ALERT_WINDOW:-3600}  # 1 hour

  # Port Scanning Detection
  - id: "port_scan"
    name: "Port Scanning Activity"
    description: "Detect potential port scanning from a single source IP"
    condition: >
      event_type in ['connection_attempt', 'connection_denied'] 
      and protocol in ['tcp', 'udp']
      and source_ip != ''
      and destination_ip != ''
    group_by: ["source_ip", "destination_ip"]
    time_window: ${SCAN_TIME_WINDOW:-60}  # 1 minute
    threshold: ${SCAN_THRESHOLD:-20}
    severity: "medium"
    actions:
      - type: "alert"
        message: "Possible port scan detected from {{ source_ip }} to {{ destination_ip }}"
      - type: "threat_intel_lookup"
        ioc: "{{ source_ip }}"
        type: "ip"
    tags: ["network", "scanning"]
    rate_limit:
      enabled: true
      max_alerts: ${SCAN_MAX_ALERTS:-3}
      time_window: ${SCAN_ALERT_WINDOW:-3600}  # 1 hour

  # Account Lockout Detection
  - id: "account_lockout"
    name: "Account Lockout Event"
    description: "Detect when a user account gets locked out"
    condition: >
      (message =~ /account.*locked/i or event_id in [4740, 4625]) 
      and user != ''
    group_by: ["user"]
    time_window: 60  # 1 minute
    threshold: 1
    severity: "high"
    actions:
      - type: "alert"
        message: "Account lockout detected for user {{ user }}"
    tags: ["authentication", "security"]

  # Suspicious Process Execution
  - id: "suspicious_process"
    name: "Suspicious Process Execution"
    description: "Detect execution of potentially malicious processes"
    condition: >
      event_type == 'process_start' 
      and process_name in ${SUSPICIOUS_PROCESSES:-['powershell.exe', 'cmd.exe', 'wscript.exe', 'cscript.exe']}
      and process_args =~ /(?i)(-nop\s+-w\s+hidden|-enc\s+|-e\s+[A-Za-z0-9+/=]+)/
    group_by: ["hostname", "process_name"]
    time_window: 300  # 5 minutes
    threshold: 1
    severity: "critical"
    actions:
      - type: "alert"
        message: "Suspicious process execution: {{ process_name }} with args: {{ process_args }}"
    tags: ["process", "security"]

  # Successful Login After Multiple Failures
  - id: "success_after_failures"
    name: "Successful Login After Multiple Failures"
    description: "Detect successful login after multiple failed attempts from the same IP"
    condition: >
      (message =~ /accepted password/i or message =~ /authentication succeeded/i) and 
      source_ip in (
        SELECT source_ip 
        FROM events 
        WHERE (message =~ /failed password/i or message =~ /authentication failed/i) 
        AND @timestamp > NOW() - INTERVAL '15 minutes' 
        GROUP BY source_ip 
        HAVING COUNT(*) >= 3
      )
    severity: "high"
    actions:
      - type: "alert"
        message: "Successful login from {{ source_ip }} after multiple failures"
      - type: "investigate"
        query: "source_ip:{{ source_ip }}"
    tags: ["authentication", "lateral_movement"]

  # Web Application Attacks
  - id: "web_attack"
    name: "Web Application Attack Patterns"
    description: "Detect common web application attack patterns"
    condition: >
      (http_uri =~ /[\x00-\x1F\x7F-\xFF]/ or  # Non-printable chars in URI
       http_uri =~ /(\.\.\/|\.\/\/)/ or      # Path traversal
       http_user_agent =~ /(sqlmap|nikto|nmap|w3af|acunetix)/i or  # Common security tools
       http_uri =~ /[;\'\"]\s*(select|union|insert|update|delete|drop|exec|xp_|--|#|\/\*|\*\/)/i)  # SQLi patterns
    severity: "high"
    actions:
      - type: "alert"
        message: "Possible web attack detected from {{ source_ip }}: {{ message }}"
      - type: "block_ip"
        ip: "{{ source_ip }}"
        duration: 86400  # 24 hours
    tags: ["web", "attack", "owasp"]

  # Data Exfiltration
  - id: "data_exfiltration"
    name: "Large Outbound Data Transfer"
    description: "Detect unusually large outbound data transfers"
    condition: "bytes_out > 10485760"  # 10MB
    group_by: ["source_ip", "destination_ip"]
    time_window: 60  # 1 minute
    threshold: 1
    severity: "high"
    actions:
      - type: "alert"
        message: "Large outbound data transfer detected from {{ source_ip }} to {{ destination_ip }} ({{ bytes_out | filesizeformat }})"
      - type: "quarantine"
        host: "{{ source_ip }}"
    tags: ["data_loss", 
